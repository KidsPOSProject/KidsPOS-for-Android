import dependencies.Dep
import dependencies.Packages
import dependencies.Versions
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'kotlinx-serialization'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.dagger.hilt.android'
    id 'org.openapi.generator'
}

android {
    namespace 'info.nukoneko.cuc.android.kidspos'

    compileSdk Versions.compileSdk

    defaultConfig {
        applicationId Packages.production
        minSdkVersion Versions.minSdk
        targetSdkVersion Versions.targetSdk
        versionCode Versions.versionCode
        versionName Versions.versionName
        testApplicationId Packages.test
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resourceConfigurations += ['ja']
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }

    // ストアに出さないのでそのまま開発用
    signingConfigs {
        release {
            storeFile file("./kidspos")
            storePassword "kidspos"
            keyAlias "kidspos"
            keyPassword "kidspos"
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            applicationIdSuffix = '.debug'
            signingConfig signingConfigs.release
        }
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    packagingOptions {
        resources {
            excludes += [
                    'META-INF/atomicfu.kotlin_module',
                    'META-INF/LICENSE.txt',
                    'META-INF/NOTICE.txt',
                    'META-INF/DEPENDENCIES',
                    'META-INF/NOTICE',
                    'META-INF/LICENSE',
                    'LICENSE.txt'
            ]
        }
    }

    flavorDimensions += ["default"]
    productFlavors {
        prod {
            dimension "default"
        }
        demo {
            dimension "default"
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    kapt {
        correctErrorTypes true
    }
}

dependencies {
    implementation libs.kotlin.std.lib
    implementation libs.kotlinx.coroutines.android
    implementation libs.dagger.hilt.android
    implementation libs.kotlinx.serialization
    implementation libs.kotlinx.serialization.json
    kapt libs.dagger.hilt.android.compiler

    // Android
    implementation Dep.Koin.android

    implementation libs.android.material
    implementation libs.androidx.activity.ktx
    implementation libs.androidx.fragment.ktx
    implementation libs.androidx.viewmodel.ktx
    implementation libs.androidx.appcompat
    implementation libs.androidx.recyclerview
    implementation libs.androidx.preference.ktx
    implementation libs.androidx.constraintlayout

    implementation(Dep.Zxing.android)

    // CameraX
    implementation libs.camerax.core
    implementation libs.camerax.camera2
    implementation libs.camerax.lifecycle
    implementation libs.camerax.view

    coreLibraryDesugaring libs.desugar.jdk.libs

    implementation platform(libs.okhttp.bom)
    implementation libs.okhttp.client
    implementation libs.okhttp.logging.interceptor

    implementation platform(libs.firebase.bom)
    implementation libs.firebase.crashlytics.ktx
    implementation libs.firebase.analytics.ktx

    implementation libs.retrofit.client
    implementation libs.retrofit.converter.serialization
    implementation libs.converter.scalars

    implementation libs.logger
    implementation libs.eventbus
}

// OpenAPI Generator Configuration
openApiGenerate {
    generatorName.set("kotlin")
    inputSpec.set("$projectDir/openapi/api.yaml")
    outputDir.set("$buildDir/generated/openapi")
    apiPackage.set("info.nukoneko.cuc.android.kidspos.api.generated")
    modelPackage.set("info.nukoneko.cuc.android.kidspos.api.generated.model")
    invokerPackage.set("info.nukoneko.cuc.android.kidspos.api.generated.invoker")
    configOptions.set([
            "library"             : "jvm-retrofit2",
            "useCoroutines"       : "true",
            "serializationLibrary": "kotlinx_serialization",
            "dateLibrary"         : "java8",
            "enumPropertyNaming"  : "UPPERCASE",
            "collectionType"      : "list"
    ])
    additionalProperties.set([
            "generateApiDocumentation"  : "false",
            "generateModelDocumentation": "false"
    ])
}

// Add generated sources to source sets
android.sourceSets {
    main.kotlin.srcDirs += "$buildDir/generated/openapi/src/main/kotlin"
}

// Make sure code is generated before compilation
tasks.withType(KotlinCompile).configureEach {
    dependsOn tasks.openApiGenerate
}

