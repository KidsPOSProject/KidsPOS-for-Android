import dependencies.Dep
import dependencies.Packages
import dependencies.Versions

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'kotlinx-serialization'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.dagger.hilt.android'
}

android {
    namespace 'info.nukoneko.cuc.android.kidspos'

    compileSdk Versions.compileSdk

    defaultConfig {
        applicationId Packages.production
        minSdkVersion Versions.minSdk
        targetSdkVersion Versions.targetSdk
        versionCode Versions.versionCode
        versionName Versions.versionName
        testApplicationId Packages.test
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resourceConfigurations += ['ja']
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }

    // ストアに出さないのでそのまま開発用
    signingConfigs {
        release {
            storeFile file("./kidspos")
            storePassword "kidspos"
            keyAlias "kidspos"
            keyPassword "kidspos"
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            applicationIdSuffix = '.debug'
            signingConfig signingConfigs.release
        }
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    packagingOptions {
        resources {
            excludes += [
                    'META-INF/atomicfu.kotlin_module',
                    'META-INF/LICENSE.txt',
                    'META-INF/NOTICE.txt',
                    'META-INF/DEPENDENCIES',
                    'META-INF/NOTICE',
                    'META-INF/LICENSE',
                    'LICENSE.txt'
            ]
        }
    }

    flavorDimensions += ["default"]
    productFlavors {
        prod {
            dimension "default"
        }
        demo {
            dimension "default"
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    kapt {
        correctErrorTypes true
    }
}

dependencies {
    implementation libs.kotlin.std.lib
    implementation libs.kotlinx.coroutines.android
    implementation libs.dagger.hilt.android
    implementation libs.kotlinx.serialization
    implementation libs.kotlinx.serialization.json
    kapt libs.dagger.hilt.android.compiler

    // Android
    implementation Dep.Koin.android

    implementation libs.android.material
    implementation libs.androidx.activity.ktx
    implementation libs.androidx.fragment.ktx
    implementation libs.androidx.viewmodel.ktx
    implementation libs.androidx.appcompat
    implementation libs.androidx.recyclerview
    implementation libs.androidx.preference.ktx
    implementation libs.androidx.constraintlayout

    implementation(Dep.Zxing.android) {
        transitive = false
    }

    coreLibraryDesugaring libs.desugar.jdk.libs

    implementation platform(libs.okhttp.bom)
    implementation libs.okhttp.client
    implementation libs.okhttp.logging.interceptor

    implementation platform(libs.firebase.bom)
    implementation libs.firebase.crashlytics.ktx
    implementation libs.firebase.analytics.ktx

    implementation libs.retrofit.client
    implementation libs.retrofit.converter.serialization

    implementation libs.logger
    implementation libs.eventbus
}
